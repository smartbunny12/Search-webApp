package algorithm;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import db.DBConnection;
import db.DBConnectionFactory;
import entity.Item;

public class GeoRecommendation {
	public List<Item> recommendItems(String userId, double lat, double lon) {
		List<Item> recommendItems = new ArrayList<>();
		DBConnection conn =DBConnectionFactory.getConnection();
		
		//1. get all favorite items
		Set<String> favoriteItemIds = conn.getFavoriteItemIds(userId);
		
		//2. get all categories of favorite items, sort by count
		Map<String, Integer> allCategories = new HashMap<>();
		for (String itemId : favoriteItemIds) {
			Set<String> categories = conn.getCategories(itemId);
			for (String category : categories) {
				if (allCategories.containsKey(category)) {
					allCategories.put(category, allCategories.get(category) + 1);
				} else {
					allCategories.put(category, 1);
				}
			}
		}
		
		
		//3. do search based on category, filter out favorited events, sort by distance
		
		
		return recommendItems;
	}
}
